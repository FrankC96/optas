#+title: pyinvk

Python Inverse Kinematics.

* Todo notes

** DONE [#C] Experiments for =pyinvk=
CLOSED: [2022-05-02 Mon 11:59]

*** Experiments

_Method_

- One cycle of the figure a of eight.
- Problem: 1 step (i.e. =N=1=), end-effector position goal with joint limits. Start from same configuration.
- Collect:
  - figure of eight trajectory
  - end-effector position evolution
  - computation time
- pyinvk solvers
  - =casadi-*=, =scipy-*=
- compare against
  - TracIK
  - EXOTica (=snopt=, =scipy-*=)

_Expected Plots_

- computation time vs time
- accuracy of end-effector trajectory vs time
- joint difference vs time

*** DONE [#C] Implement experiments
CLOSED: [2022-05-02 Mon 11:57] DEADLINE: <2022-05-02 Mon>

- [X] =pyinvk= solvers
  - [X] ipopt
  - [X] +snopt+
  - [X] +knitro+
- [X] =trac_ik=
- [X] exotica

  [2022-05-02 Mon]
  Knitro had some very strange errors.
  Not sure if this is a problem with the formulation or something else.
  I have some linking issue on both my PC's with SNOPT.

*** DONE [#C] Run =pyinvk= experiments 
CLOSED: [2022-05-02 Mon 11:58] DEADLINE: <2022-05-02 Mon>

** TODO [#C] Type hints for python scripts

** TODO [#C] Handle linear constraints

The =OptimizationBuilder= class should have additional containers for linear constraints.
Scipy can handle linear constraints, but these need to be defined explicitly.
Currently, I just pass all constraints as generic nonlinear constraints.
This update would likely lead to speedups.

** TODO [#C] Investigate if it's possible to get FK to other links on robot using =urdf2casadi=

In theory this is possible since you can call =parser.get_forward_kinematics= for different root/tip.
However, the problem will be passing the correct joint angles.

** TODO [#C] Remove runtime warnings from Scipy solvers

In the =ScipySolver= class, I just pass Jacobian/Hessians regardless whether the desired method uses them or not.
This leads to run-time warning like the following.

#+begin_src
/home/chris/.local/lib/python3.8/site-packages/scipy/optimize/_minimize.py:522: RuntimeWarning: Method SLSQP does not use Hessian information (hess).
  warn('Method %s does not use Hessian information (hess).' % method,
#+end_src

Ideally, I would handle this internally to prevent these warnings being thrown.

** TODO [#B] Package'ify =pyinvk= and host on pip
DEADLINE: <2022-05-13 Fri>

